@page "/assesshomepage"
@using System.Diagnostics;
@using Tool.Shared
@inject HttpClient Http
@inject HttpClient _http
@inject NavigationManager NavigationManager

<PageTitle>Quiz Instructions</PageTitle>



<div class="Container">
    <div class="Container-heading">
        <h2>Quiz Instructions</h2>
    </div>
    <div class="quiz-instruction">
        <p>1. All questions are multiple choice questions and are compulsory.</p>
        <p>2. Passing criteria is set as 70% for all exams.</p>
        <p>3. Please do not press ALT+TAB or any other key while attempting for exam. Else, your exam will be immediately terminated.</p>
        <p>4. Please close all other running applications and disable all desktop alerts.</p>
        <p>5. Please do not try to minimize exam window, click on address bar or switch to other application. Else, your exam will be immediately terminated.</p>
        <p>6. Clicking on Next button will display question next in-line on screen. To navigate to previous question, click on specific question in list.</p>
        <p>7. Un-attempted questions will be displayed in Red color. You can answer them if left with time.</p>
        <p>8. Clicking on Submit button will submit the exam for assessment.</p>
        <p>9. Reminder message to submit the exam will be displayed on screen before 5 minutes of its maximum allowed time. If not submitted before it reaches the limit, exam will be submitted automatically.</p>
        <p>10. Before taking exam, please make sure you brush up your knowledge by navigating training material available here <a href="pdf/QuizExamMaterial.pdf" target="_blank" title="Read PDF">Click here</a><br /> Please select the exam you want to appear for from dropdown here -</p>

    </div>
    <div class="form-actions">
        <button type="button" @onclick="@Cancel" class="btn">Cancel</button>
        <div class="Quiz-category form-input">
            <label for="quiz-category"><b>Quiz Category : </b></label>
            <select class="category-dropdown" @bind="@selectedQuizCategoryId">
                @foreach (var quiz in quizList)
                {
                    <option value="@quiz.QuizId">@quiz.QuizTitle</option>
                }
            </select>
        </div>
        <button type="button" @onclick="@TakeQuiz" class="btn active">Take Quiz</button>
    </div>
</div>
@code {
    private int selectedQuizCategoryId;
    List<HomeViewModel> quizList = new List<HomeViewModel>();
    protected override async Task OnInitializedAsync()
    {
        await getQuizCategory();
    }

    private async Task TakeQuiz()
    {
        NavigationManager.NavigateTo($"/assesstakeexam");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

    async Task getQuizCategory()
    {
        var response = await _http.GetAsync("api/quiz");
        response.EnsureSuccessStatusCode();
        quizList = await response.Content.ReadFromJsonAsync<List<HomeViewModel>>();
        foreach (var q in quizList)
        {
            Debug.WriteLine(q.QuizTitle);
        }
    }
}