@page "/"
@using Tool.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<PageTitle>Tool Login</PageTitle>

<div class="login-container">
    <EditForm Model="@user" OnValidSubmit="Login">



        <div class="login-container">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="login-input-container">
                <label for="email" class="login-input-label">Username</label>
                <input type="email" id="email" @bind="@user.Email" form="Email" asp-for="email" required />
                <ValidationMessage For="@(() => user.Email)"></ValidationMessage>
                <span asp-validation-for="email"></span>
            </div>



            <div class="login-input-container">
                <label for="password" class="login-input-label">Password</label>
                <input type="password" id="password" @bind="@user.Password"
                       asp-for="password"
                       pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%^&*]).{8,}"
                       title="Password must contain at least 8 characters,
                including at least one uppercase letter,
                one lowercase letter, one number and one special character." form="Password" required />
                <ValidationMessage For="@(() => user.Password)"></ValidationMessage>
                <span asp-validation-for="email"></span>
            </div>
            @if (showError)
            {
                <div class="alert" style="width:25rem; color:red " role="alert"> Invalid username and password </div>
            }

            <div class="login-actions">
                <button class="btn active">Login</button>
                <button type="reset" class="btn">Cancel</button>
            </div>
        </div>



    </EditForm>
</div>


@*// Todo api call implement*@


@code {
    string Email;
    string Password;
    bool showError = false;




    LoginViewModel user = new LoginViewModel();
    protected override async Task OnInitializedAsync()
    {
    }

    protected async Task Login()
    {
        var response = await Http.PostAsJsonAsync("api/user", @user);
        bool loginResponse = await response.Content.ReadFromJsonAsync<bool>();
        if (loginResponse)
        {
            if (user.Email.Contains("assess") || user.Email.Contains("Assess") || user.Email.Contains("ASSESS"))
            {
                NavigationManager.NavigateTo("/assesshomepage");
            }
            else if (user.Email.Contains("admin") || user.Email.Contains("Admin") || user.Email.Contains("ADMIN"))
            {
                NavigationManager.NavigateTo("/homepage");
            }
            else
            {
                showError = true;
            }
        }

    }
}
