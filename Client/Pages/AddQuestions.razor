@page "/addquestion"
@using Tool.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<PageTitle>AddQuestions</PageTitle>

<div class="Container">
    <div class="Container-heading">
        <h2>Adding Question</h2>
    </div>
    <form class="input-form" id="QuestionForm">

        <div class="Quiz-name form-input"> 
            <label for="quiz-category">Quiz Category Name:</label>
        </div>
        <div class="Question-text form-input">
            <label for="question-text">Question Text:</label>
            <textarea @bind="@question.QuestionText" ></textarea>
        </div>
        <div class="input-options form-input">
            <label for="option-one" class="checkbox-label">Option 1:</label>
            <input type="text" @bind-value="@question.OptionOne" />
            <input type="checkbox" id="option-one-checkbox" />
        </div>
        <div class="input-options form-input">
            <label for="option-two" class="checkbox-label">Option 2:</label>
            <input type="text" @bind-value="@question.OptionTwo" />
            <input type="checkbox" id="option-two-checkbox" />
        </div>
        <div class="input-options form-input">
            <label for="option-three" class="checkbox-label">Option 3:</label>
            <input type="text" @bind-value="@question.OptionThree" />
            <input type="checkbox" id="option-three-checkbox" />
        </div>
        <div class="input-options form-input">
            <label for="option-four" class="checkbox-label">Option 4:</label>
            <input type="text" @bind-value="@question.OptionFour" />
            <input type="checkbox" id="option-four-checkbox" />
        </div>

        <div class="form-actions">
            <button type="button" @onclick="@Cancel" class="btn">Cancel</button>
            <button type="button" @onclick="@SaveQuestion" class="btn active">Save</button>
            <button type="button" @onclick="@AddMore" class="btn">Add More Question</button>
        </div>
    </form>
</div>

@code {
    private QuestionViewModel question = new QuestionViewModel();

    protected override async Task OnInitializedAsync()
    {
        // Any initialization logic can be added here
    }

    private async Task SaveQuestion()
    {
        var response = await Http.PostAsJsonAsync("api/Question", question);
        var questionResponse = await response.Content.ReadFromJsonAsync<QuestionViewModel>();
        if (questionResponse.QuestionQuizId > 0)
        {
            NavigationManager.NavigateTo("/editquizcategory");
        }
    }

    private async Task AddMore()
    {
        var response = await Http.PostAsJsonAsync("api/Question", question);
        var questionResponse = await response.Content.ReadFromJsonAsync<QuestionViewModel>();
        if (questionResponse.QuestionQuizId > 0)
        {
            question = new QuestionViewModel();
            await JsRuntime.InvokeVoidAsync("resetForm", "#QuestionForm");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/homepage");
    }
}
