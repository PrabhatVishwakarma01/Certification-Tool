@page "/editquizcategory/{QuizId:int}"
@using System.Diagnostics;
@using Tool.Shared;
@inject HttpClient _httpClient
@inject HttpClient _http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<PageTitle>EditQuizCategory</PageTitle>



<div class="master p-4">
    <br />
    <br />
    <div class="center">
        <div class="Quiz-name form-input">
            <label for="quiz-category">Quiz Category Name : <b>@quiz.QuizTitle</b></label>
        </div>
        @if (questionList != null)
        {
            <table class="master-table table table-striped table-borderless">
                <thead>
                    <tr class="master-head">
                        <th class="master-head QuestionNo"><b>Question #</b> </th>
                        <th class="master-head QuestionText"><b>Question Text</b></th>
                        <th class="master-head Questionoption"><b>Correct Option</b></th>
                        <th class="master-head QuestionNo"><b>Action</b></th>
                    </tr>
                </thead>
                <tbody class="master-table3">
                    @foreach (var (q, index) in questionList.Select((q, index) => (q, index + 1)))
                    {
                        <tr class="master-row">
                            <td class="master-tablebody" style="text-align: center;">@index</td>
                            <td class="master-tablebody">@q.QuestionText</td>
                            <td class="master-tablebody">@q.IsCorrect</td>
                            <td class="master-tablebody" style="text-align: center;">
                                <button type="button" class="btn"><a  style="color: black; padding:0" href="/editquestion/@q.QuestionId"><i class="fa fa-edit"></i></a></button>
                                <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#deleteQuizCategoryModal" @onclick="(e) => { questionToDelete = q.QuestionId; serialNo = index; }"><i class="fa-regular fa-trash-can"></i></button>
                            </td>
                        </tr>
                    }
                    @*Delete dialogue box*@
                    <div class="modal fade" id="deleteQuizCategoryModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog delete-dialog-box">
                            <div class="dialog-content">
                                <div class="dialog-body">
                                    Are you sure you want to delete question number <b>@serialNo</b> from <b>@quiz.QuizTitle</b> ?
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn action-btn" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" data-bs-dismiss="modal" @onclick="@Delete" class="btn action-btn active" id="deleteQuizCategoryButton">Delete</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </tbody>
            </table>
        }
    </div>
</div>
@code {
    [Parameter]
    public int QuizId { get; set; }

    public int questionToDelete;

    public int serialNo;


    List<QuestionViewModel> questionList = new List<QuestionViewModel>();
    QuizViewModel quiz = new QuizViewModel();
    protected override async Task OnInitializedAsync()
    {
        await getQuestionList();


    }



    void ShowDeleteDialog(int questionNumberToDelete, int questionId)
    {

        JsRuntime.InvokeVoidAsync("$('#deleteQuestionDialog').modal('show');");



    }



    protected async Task Delete()
    {
        try
        {
            var response = await _httpClient.DeleteAsync("api/question/" + questionToDelete);
            response.EnsureSuccessStatusCode();
            questionList.RemoveAll(q => q.QuestionId == questionToDelete);
            JsRuntime.InvokeVoidAsync("$('#deleteQuizCategoryModal').modal('hide');");
        }
        catch (Exception ex)
        {
            // Display error message to user
            await JsRuntime.InvokeVoidAsync("alert", $"An error occurred while deleting the question: {ex.Message}");
        }
    }




    void CancelDelete()
    {
        JsRuntime.InvokeVoidAsync("$('#deleteQuestionDialog').modal('hide');");

    }






    bool flag = false;
    bool validResponse = false;



    async Task getQuestionList()
    {
        var response = await _http.GetAsync("api/quiz/" + QuizId);
        response.EnsureSuccessStatusCode();
        quiz = await response.Content.ReadFromJsonAsync<QuizViewModel>();
        questionList = quiz.Questions;


    }




}